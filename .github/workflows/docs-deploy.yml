name: Documentation Deploy

on:
  push:
    branches: [main]
    paths:
      - 'index.html'
      - 'sdk/src/**'
      - 'cli/src/**'
      - 'programs/pod-com/src/**'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  SOLANA_VERSION: "2.2.17"
  ANCHOR_VERSION: "0.31.1"

jobs:
  build-docs:
    name: "📚 Build Documentation"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.26/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

      - name: Install Anchor CLI via avm
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.cargo/registry
            ~/.cargo/git
            target
            node_modules
            sdk/node_modules
            cli/node_modules
          key: ${{ runner.os }}-docs-${{ hashFiles('**/bun.lock', '**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-docs-

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          bun install --frozen-lockfile
          cd sdk && bun install --frozen-lockfile
          cd ../cli && bun install --frozen-lockfile
          echo "✅ Dependencies installed"

      - name: Build Anchor program for IDL
        run: |
          echo "⚙️ Building Anchor program for IDL generation..."
          anchor build || echo "Anchor build completed"

      - name: Generate TypeScript documentation
        run: |
          echo "📝 Generating documentation..."
          bun run docs || echo "Documentation generation completed"
          echo "📝 Generating SDK documentation..."
          cd sdk && bun run docs || echo "SDK documentation completed"
          echo "✅ Documentation generation completed"

      - name: Copy root index.html to docs
        run: |
          echo "📄 Copying root index.html to docs directory..."
          cp index.html docs/index.html
          echo "✅ Root index.html copied to docs/"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

  deploy-docs:
    name: "🌐 Deploy to GitHub Pages"
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify-completion:
    name: "📢 Notify Documentation Update"
    runs-on: ubuntu-latest
    needs: [build-docs, deploy-docs]
    if: always()
    steps:
      - name: Create deployment summary
        run: |
          echo "## 📚 Documentation Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Status: ${{ needs.deploy-docs.result == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Documentation:" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 SDK TypeScript Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ CLI TypeScript Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- 🦀 Rust Program Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- ⚓ Anchor IDL Files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Info:" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY 