name: Claude Code PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  claude-code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}

      - name: Generate PR diff
        run: |
          git diff origin/${{ github.base_ref }}...${{ github.head_ref }} > pr.diff

      - name: Call Claude Code for review
        id: claude
        shell: bash
        env:
          ANTHROPIC_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          prompt="Youâ€™re an elite code reviewer. Analyze this diff and produce GitHub suggestion comments that fix bugs, improve style, and complete missing pieces. Format each suggestion like:\n\nfile:path/to/file.ext:line:start-end\nsuggestion: Your code or comment here\n---\n\nDiff:\n$(sed 's/"/\\"/g' pr.diff)"
          
          response=$(curl -s https://api.anthropic.com/v1/complete \
            -H "Content-Type: application/json" \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -d '{
              "model": "claude-code-2",
              "prompt": "'"$prompt"'",
              "max_tokens_to_sample": 1000,
              "temperature": 0
            }')

          # Export for next step
          {
            echo "response<<EOF"
            echo "$response"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Post suggestions as PR comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const raw = `\${{ steps.claude.outputs.response }}`.trim();
            const blocks = raw.split('---');
            for (let block of blocks) {
              const [meta, body] = block.split('suggestion:');
              if (!body) continue;
              const fileLine = meta.trim().split('\n')[0]; 
              // meta looks like "file:path/to/file.ext:123:10-15"
              const parts = fileLine.replace(/^file:/, '').split(':');
              const path = parts[0];
              const lineStart = parseInt(parts[2], 10);
              const lineEnd = parseInt(parts[3], 10);

              await github.rest.pulls.createReviewComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                path,
                line: lineEnd,
                side: 'RIGHT',
                body: body.trim()
              });
            }
