/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type CompressedMessageSynced = {
  channelId: Address;
  messageHash: Array<number>;
  compressedHash: Array<number>;
  batchIndex: number;
  syncTimestamp: bigint;
};

export type CompressedMessageSyncedArgs = {
  channelId: Address;
  messageHash: Array<number>;
  compressedHash: Array<number>;
  batchIndex: number;
  syncTimestamp: number | bigint;
};

export function getCompressedMessageSyncedEncoder(): Encoder<CompressedMessageSyncedArgs> {
  return getStructEncoder([
    ['channelId', getAddressEncoder()],
    ['messageHash', getArrayEncoder(getU8Encoder(), { size: 32 })],
    ['compressedHash', getArrayEncoder(getU8Encoder(), { size: 32 })],
    ['batchIndex', getU32Encoder()],
    ['syncTimestamp', getI64Encoder()],
  ]);
}

export function getCompressedMessageSyncedDecoder(): Decoder<CompressedMessageSynced> {
  return getStructDecoder([
    ['channelId', getAddressDecoder()],
    ['messageHash', getArrayDecoder(getU8Decoder(), { size: 32 })],
    ['compressedHash', getArrayDecoder(getU8Decoder(), { size: 32 })],
    ['batchIndex', getU32Decoder()],
    ['syncTimestamp', getI64Decoder()],
  ]);
}

export function getCompressedMessageSyncedCodec(): Codec<
  CompressedMessageSyncedArgs,
  CompressedMessageSynced
> {
  return combineCodec(
    getCompressedMessageSyncedEncoder(),
    getCompressedMessageSyncedDecoder()
  );
}
