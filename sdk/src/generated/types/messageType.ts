/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU8Decoder,
  getU8Encoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type MessageType =
  | { __kind: 'Text' }
  | { __kind: 'Data' }
  | { __kind: 'Command' }
  | { __kind: 'Response' }
  | { __kind: 'Custom'; fields: readonly [number] };

export type MessageTypeArgs = MessageType;

export function getMessageTypeEncoder(): Encoder<MessageTypeArgs> {
  return getDiscriminatedUnionEncoder([
    ['Text', getUnitEncoder()],
    ['Data', getUnitEncoder()],
    ['Command', getUnitEncoder()],
    ['Response', getUnitEncoder()],
    [
      'Custom',
      getStructEncoder([['fields', getTupleEncoder([getU8Encoder()])]]),
    ],
  ]);
}

export function getMessageTypeDecoder(): Decoder<MessageType> {
  return getDiscriminatedUnionDecoder([
    ['Text', getUnitDecoder()],
    ['Data', getUnitDecoder()],
    ['Command', getUnitDecoder()],
    ['Response', getUnitDecoder()],
    [
      'Custom',
      getStructDecoder([['fields', getTupleDecoder([getU8Decoder()])]]),
    ],
  ]);
}

export function getMessageTypeCodec(): Codec<MessageTypeArgs, MessageType> {
  return combineCodec(getMessageTypeEncoder(), getMessageTypeDecoder());
}

// Data Enum Helpers.
export function messageType(
  kind: 'Text'
): GetDiscriminatedUnionVariant<MessageTypeArgs, '__kind', 'Text'>;
export function messageType(
  kind: 'Data'
): GetDiscriminatedUnionVariant<MessageTypeArgs, '__kind', 'Data'>;
export function messageType(
  kind: 'Command'
): GetDiscriminatedUnionVariant<MessageTypeArgs, '__kind', 'Command'>;
export function messageType(
  kind: 'Response'
): GetDiscriminatedUnionVariant<MessageTypeArgs, '__kind', 'Response'>;
export function messageType(
  kind: 'Custom',
  data: GetDiscriminatedUnionVariantContent<
    MessageTypeArgs,
    '__kind',
    'Custom'
  >['fields']
): GetDiscriminatedUnionVariant<MessageTypeArgs, '__kind', 'Custom'>;
export function messageType<K extends MessageTypeArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isMessageType<K extends MessageType['__kind']>(
  kind: K,
  value: MessageType
): value is MessageType & { __kind: K } {
  return value.__kind === kind;
}
