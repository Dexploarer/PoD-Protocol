[package]
name = "pod-sdk-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
description = "Core implementation of the PoD Protocol Rust SDK"
keywords.workspace = true
categories.workspace = true
readme = "../../README.md"

[lib]
name = "pod_sdk_core"
path = "src/lib.rs"

[dependencies]
# Workspace dependencies
tokio = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
futures = { workspace = true }

# Solana - Web3.js v2.0 compatible
solana-sdk = { workspace = true }
solana-client = { workspace = true }
solana-program = { workspace = true }
solana-rpc-client = { workspace = true }
solana-rpc-client-api = { workspace = true }
solana-account-decoder = { workspace = true }
anchor-client = { workspace = true }
anchor-lang = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
borsh = { workspace = true }
bincode = { workspace = true }

# Cryptography - ed25519-dalek comes from Solana SDK
# Note: Do not specify ed25519-dalek here - use Solana's version
blake3 = { workspace = true }
sha2 = { workspace = true }
rand = { workspace = true }
rand_core = { workspace = true }

# HTTP and networking
reqwest = { workspace = true, features = ["multipart"] }
hyper = { workspace = true }
hyper-rustls = { workspace = true }
rustls = { workspace = true }
webpki-roots = { workspace = true }

# Async utilities
async-trait = { workspace = true }
async-stream = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# URL handling
url = { workspace = true }

# Time
chrono = { workspace = true }

# Logging
tracing = { workspace = true }
log = { workspace = true }

# Collections and utilities
indexmap = { workspace = true }
smallvec = { workspace = true }
bytes = { workspace = true }
dashmap = { workspace = true }

# Memory management
lru = { workspace = true }

# Optional features (commented out to avoid conflicts for initial Web3.js v2.0 setup)
# ipfs-api-backend-hyper = { workspace = true, optional = true }
# light-client = { workspace = true, optional = true }
# light-utils = { workspace = true, optional = true }
# pprof = { workspace = true, optional = true }

# WASM support
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
js-sys = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true }

# Compression libraries
flate2 = "1.0"
zstd = "0.13"
hex = "0.4"

# Local dependencies
pod-sdk-types = { path = "../pod-sdk-types" }
pod-sdk-crypto = { path = "../pod-sdk-crypto" }

[dev-dependencies]
tokio-test = "0.4"
pretty_assertions = { workspace = true }
mockall = { workspace = true }
wiremock = { workspace = true }
criterion = { workspace = true }

[features]
default = ["native"]

# Core features
native = [
    "tokio/rt-multi-thread",
    "reqwest/native-tls",
    "hyper/tcp",
    "hyper/http1",
    "hyper/http2"
]

wasm = [
    "wasm-bindgen",
    "wasm-bindgen-futures",
    "js-sys", 
    "web-sys"
]

# Optional functionality
compression = []
ipfs = []
profiling = []

# Testing features
testing = []

# [[bench]]
# name = "performance"
# harness = false
# required-features = ["testing"]

[package.metadata.docs.rs]
features = ["native", "compression", "ipfs"]
rustdoc-args = ["--cfg", "docsrs"] 