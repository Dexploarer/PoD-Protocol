# Production Dockerfile for PoD Protocol
FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY bun.lockb ./

# Install Bun
RUN npm install -g bun

# Copy workspace package files
COPY sdk/package*.json ./sdk/
COPY cli/package*.json ./cli/

# Install dependencies
RUN bun install --frozen-lockfile --production

# Copy source code
COPY . .

# Build the project
RUN bun run build:all

# Production stage
FROM node:18-alpine AS production

# Install Bun in production image
RUN npm install -g bun

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S podprotocol -u 1001

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=base --chown=podprotocol:nodejs /app/sdk/dist ./sdk/dist
COPY --from=base --chown=podprotocol:nodejs /app/cli/dist ./cli/dist
COPY --from=base --chown=podprotocol:nodejs /app/package.json ./
COPY --from=base --chown=podprotocol:nodejs /app/node_modules ./node_modules

# Create logs directory
RUN mkdir -p /app/logs && chown podprotocol:nodejs /app/logs

# Switch to non-root user
USER podprotocol

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node --version || exit 1

# Start the application
CMD ["node", "cli/dist/index.js", "--help"]
